@using Log4JDash.Web.Models
@model LogIndexViewModel
@{
    Layout = null;
}<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>List</title>
        <link rel="stylesheet" type="text/css" href="@Url.Content("~/assets/reset-css-2.0/reset.css")" />
        <link rel="stylesheet" type="text/css" href="@Url.Content("~/assets/my/css/log.css")" />
    </head>
    <body>
        <header>
            @{
                var source = Model.Query.Source.Value;
            }
            <h1>
                @if (source != null)
                {
                    var resetSource = new LogSourceModel (source.Id, null);
                    var latestPageModel = new LogQuery
                    {
                        Source = { Value = resetSource }
                    };
                    var latestPageRouteValues = latestPageModel.GetRouteValues ();

                    @source.Id
                    if (source.Snapshot != null)
                    {
                        <span class="log-latest">
                            @Html.ActionLink("\u21BB", null, latestPageRouteValues)
                        </span>
                    }
                }
            </h1>

            @using (Html.BeginForm (null, null, FormMethod.Get, new { @class = "log-query", onsubmit = "suppressDefaults(this);" }))
            {
                <div>
                    @Html.EditorFor(model => model.Query, null, String.Empty)
                </div>
                <div>
                    <input type="submit" value="Искать" />
                    @{
                        var prevPageQuery = Model.Query.Clone ();
                        prevPageQuery.Offset += Model.Query.Quantity;
                        var prevPageRouteValues = prevPageQuery.GetRouteValues ();
                        var prevPageAttributes = new Dictionary<string, object> ();
                        if (Model.Events.Count < Model.Query.Quantity)
                        {
                            prevPageAttributes.Add ("class", "log-page-missing");
                        }

                        var nextPageQuery = Model.Query.Clone ();
                        nextPageQuery.Offset -= Model.Query.Quantity;
                        var nextPageRouteValues = nextPageQuery.GetRouteValues ();
                        var nextPageAttributes = new Dictionary<string, object> ();
                        if (Model.Query.Offset <= 0)
                        {
                            nextPageAttributes.Add ("class", "log-page-missing");
                        }

                        var lastPageQuery = Model.Query.Clone ();
                        lastPageQuery.Offset = 0;
                        var lastPageRouteValues = lastPageQuery.GetRouteValues ();
                        var lastPageAttributes = nextPageAttributes;
                    }
                    @Html.ActionLink("<", "List", prevPageRouteValues, prevPageAttributes)
                    @Html.ActionLink(">", "List", nextPageRouteValues, nextPageAttributes)
                    @Html.ActionLink("Последняя", "List", lastPageRouteValues, lastPageAttributes)
                    @Html.EditorFor(m => m.Query.Source, null, "Source")
                </div>
            }
        </header>

        <main>
            @if (Model.Events.Any ())
            {
                <ol class="log-list">
                    @foreach (var @event in Model.Events)
                    {
                        @Html.DisplayFor(_ => @event)
                    }
                </ol>
            }
            else
            {
                <div>Empty!</div>
            }
        </main>

        <script type="text/javascript" src="@Url.Content("~/assets/my/js/suppressDefaults.js")"></script>
    </body>
</html>
